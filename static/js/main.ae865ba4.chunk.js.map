{"version":3,"sources":["components/wip.png","components/Logo.png","components/Navbar.js","components/Introduction.js","components/Projects.js","components/About.js","components/Contact.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","type","data-toggle","data-target","exact","to","src","logo","alt","id","Introduction","Projects","wip","href","title","About","Contact","state","name","message","subject","email","sent","buttonText","formSubmit","e","preventDefault","setState","resetForm","onSubmit","onChange","target","value","placeholder","this","required","Component","Container","render","location","TransitionGroup","CSSTransition","key","timeout","classNames","path","component","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.ae865ba4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wip.6a6e2750.png\";","module.exports = __webpack_public_path__ + \"static/media/Logo.22cc72fb.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../App.css';\r\nimport logo from './Logo.png';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-default animated fadeIn\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"navbar-header\">\r\n          <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myTopNav\">\r\n            <span className=\"icon-bar\"></span>\r\n            <span className=\"icon-bar\"></span>\r\n            <span className=\"icon-bar\"></span>\r\n          </button>\r\n          <NavLink className=\"navbar-brand\" exact to=\"/\"><img src={logo} alt=\"logo\" id=\"brand\"/></NavLink>\r\n        </div>\r\n        <div className=\"collapse navbar-collapse\" id=\"myTopNav\">\r\n          <ul className=\"nav navbar-nav topnav\">\r\n            <li><NavLink className=\"button\" id=\"home-button\" exact to=\"/\">Home</NavLink></li>\r\n            <li><NavLink className=\"button\" id=\"projects-button\" exact to=\"/projects\">Projects</NavLink></li>\r\n            <li><NavLink className=\"button\" id=\"about-button\" exact to=\"/about\">About Me</NavLink></li>\r\n            <li><NavLink className=\"button\" id=\"contact-button\" exact to=\"/contact\">Contact</NavLink></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\n// The introduction page contents\r\nconst Introduction = () => {\r\n  return (\r\n    <div id=\"introduction\" className=\"page\">\r\n      <p className=\"intro-text intro-1 animated fadeInUp\">Hi, I'm Jonathan</p>\r\n      <p className=\"intro-text intro-2 animated fadeInUp\">I'm a programmer and web developer.</p>\r\n      <div className=\"intro-text intro-3 animated fadeIn\">\r\n        <NavLink exact to=\"/projects\" id=\"intro-button\">\r\n          <span id=\"arrow\">&#10132;</span> View Projects\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Introduction;","import React from 'react';\r\nimport 'animate.css/animate.css';\r\nimport '../App.css';\r\nimport wip from './wip.png';\r\n\r\n// The projects page contents\r\nconst Projects = () => {\r\n    return (\r\n      <div className=\"page\">\r\n        <p className=\"page-title\">Projects</p><br/>\r\n        <div className=\"card animated fadeInUp\" id=\"project-1\">\r\n          <img className=\"card-img\" src={wip} alt=\"Travel Plan Website\"/>\r\n          <div className=\"card-content\">\r\n            <a className=\"card-link\" href=\"https://github.com/JRBonilla/Travel-Plan-Website\" title=\"View on GitHub\"><i className=\"fas fa-external-link-alt\"></i></a>\r\n            <h4 className=\"card-title\">Travel Plan Website</h4>\r\n            <p className=\"card-body\">\r\n            Mock travel plan website made with AngularJS, PHP, and SQL.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card animated fadeInUp\" id=\"project-2\">\r\n          <img className=\"card-img\" src={wip} alt=\"Phoebe\"/>\r\n          <div className=\"card-content\">\r\n            <a className=\"card-link\" href=\"https://github.com/JRBonilla/Phoebe\" title=\"View on GitHub\"><i className=\"fas fa-external-link-alt\"></i></a>\r\n            <h4 className=\"card-title\">Phoebe</h4>\r\n            <p className=\"card-body\">\r\n            Simple game engine made in C++, OpenGL, and GLFW.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card animated fadeInUp\" id=\"project-3\">\r\n          <img className=\"card-img\" src={wip} alt=\"DropIn\"/>\r\n          <div className=\"card-content\">\r\n            <a className=\"card-link\" href=\"https://github.com/JRBonilla/DropIn\" title=\"View on GitHub\"><i className=\"fas fa-external-link-alt\"></i></a>\r\n            <h4 className=\"card-title\">DropIn</h4>\r\n            <p className=\"card-body\">\r\n            App that lets users drop in and out of events using swipes.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport '../App.css';\r\n\r\n// The about page contents\r\nconst About = () => {\r\n  return (\r\n      <div className=\"page\">\r\n        <p className=\"page-title\">About Me</p>\r\n        <div className=\"about-me animated fadeInUp\">\r\n          <p>\r\n            I'm a Computer Science student in my final year of studies with a passion\r\n            for software and web development excited to begin my career as a developer.\r\n          </p>\r\n          <p>\r\n            My years of experience and education have let me gain a solid\r\n            background in programming languages such as Java, C/C++, and C#, and\r\n            web technologies including HTML, CSS, JavaScript, AngularJS, React.js,\r\n            PHP, and SQL.\r\n          </p>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\n// The contact page contents\r\nclass Contact extends Component {\r\n  state = {\r\n    name: '',\r\n    message: '',\r\n    subject: '',\r\n    email: '',\r\n    sent: false,\r\n    buttonText: 'Send'\r\n  }\r\n\r\n  formSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      buttonText: '...sending'\r\n    });\r\n    \r\n    /*\r\n    let data = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      subject: this.state.subject,\r\n      message: this.state.message,\r\n    }\r\n\r\n    axios.post('API_URI', data)\r\n    .then(res => {\r\n      this.setState({ sent: true }, this.resetForm())\r\n    })\r\n    .catch(() => {\r\n      console.log('Message not sent')\r\n    });\r\n    */\r\n  }\r\n\r\n  resetForm = () => {\r\n    this.setState({\r\n      name: '',\r\n      message: '',\r\n      subject: '',\r\n      email: '',\r\n      buttonText: 'Message sent'\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"page\">\r\n        <p className=\"page-title\">Contact</p>\r\n        <div id=\"contact\" className=\"animated fadeInUp\">\r\n          <form className=\"contact-form\" onSubmit={ (e) => this.formSubmit(e) }>\r\n            <input onChange={(e) => this.setState({ name: e.target.value})} name=\"name\" className=\"message-name\" type=\"text\" placeholder=\"Name\" value={this.state.name} required/>\r\n            <input onChange={(e) => this.setState({ email: e.target.value})} name=\"email\" className=\"message-email\" type=\"email\" placeholder=\"your@email.com\" value={this.state.email} required/><br/>\r\n            <input onChange={(e) => this.setState({ subject: e.target.value})} name=\"subject\" className=\"message-subject\" type=\"text\" placeholder=\"Subject\" value={this.state.subject} required/><br/>\r\n            <textarea onChange={(e) => this.setState({ message: e.target.value})} name=\"message\" className=\"message-input\" type=\"text\" placeholder=\"Write your message here\" value={this.state.message} required/><br/>\r\n            <div className=\"button\">\r\n                <button type=\"submit\" className=\"button button-primary\">{ this.state.buttonText }</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { Container as BootstrapContainer } from 'react-bootstrap';\r\nimport '../App.css';\r\nimport 'animate.css/animate.css';\r\nimport Introduction from './Introduction';\r\nimport Projects from './Projects';\r\nimport About from './About';\r\nimport Contact from './Contact';\r\n\r\n// Routes between the different pages\r\nconst Container = () => {\r\n  return (\r\n    <Route render={({location}) => (\r\n      <BootstrapContainer>\r\n        <TransitionGroup>\r\n          <CSSTransition\r\n            key={location.key}\r\n            timeout={800}\r\n            classNames={'fade'}\r\n          >\r\n            <Switch location={location}>\r\n              <Route exact path=\"/\" component={Introduction}/>\r\n              <Route path=\"/projects\" component={Projects}/>\r\n              <Route path=\"/about\" component={About}/>\r\n              <Route path=\"/contact\" component={Contact}/>\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      </BootstrapContainer>\r\n    )}/>\r\n  )\r\n}\r\n\r\nexport default Container;","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Container from './components/Container';\n//import Footer from './components/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar/>\n        <Container/>\n        {/*<Footer/>*/}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Route path=\"/\" component={App} />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}